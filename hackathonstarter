#!/bin/bash
. .env
REPO="$1"
KEY="$2"
EC2IP="$3"
DIR=$(cd -P -- "$(dirname -- "${BASH_SOURCE[0]}")" && pwd -P)

function print_usage() {
    echo "Usage: $0 <user/repo> <key> <ec2ip>"
}

function print_set_pat() {
    echo "Please set GitHub Personal Access Token:"
    echo "echo 'PAT=ghp_aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa' > .env"
}

function check_push_permission() {
    echo "Checking for push permission..."
    TEST_BRANCH="main"
    cd `mktemp -d`
    git init > /dev/null 2>&1
    echo 'test' > test
    git add . 
    git commit -m "test" > /dev/null 2>&1
    git checkout -b "$TEST_BRANCH" > /dev/null 2>&1
    git push "git@github.com:$REPO.git" "$TEST_BRANCH" > /dev/null 2>&1
}

function check_ssh_access() {
    echo "Checking for SSH access..."
    chmod 600 "$KEY"
    if [ -z "$(ssh-keygen -F $EC2IP > /dev/null 2>&1)" ]; then
        ssh-keyscan -H $EC2IP >> ~/.ssh/known_hosts 2> /dev/null
    fi
    ssh -i "$KEY" ec2-user@"$EC2IP" echo "1" > /dev/null 2>&1
}

if [ -z "$REPO" ]; then
    print_usage; exit 1
fi

if [ -z "$KEY" ]; then
    print_usage; exit 1
fi

if [ -z "$EC2IP" ]; then
    print_usage; exit 1
fi

if [ -z "$PAT" ]; then
    print_set_pat; exit 1
fi

if ! check_push_permission; then
    echo "You don't have access to that repo or repo is not empty"; exit 1
fi

if ! check_ssh_access; then
    echo "You don't have SSH access to that EC2 Instance"; exit 1
fi

cd "$DIR"
exec ./lib/repoinit.sh "$REPO" "$KEY" "$EC2IP"
